#include "stm32f7xx.h"

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdio.h>

void debug_init(void) {
    // Configure UART GPIO
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
    GPIOD->MODER |= (GPIO_MODER_MODER8_1 | GPIO_MODER_MODER9_1);
    GPIOD->AFR[1] |= (7 | (7 << 4));

    // Configure UART
    RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
    USART3->BRR = 16000000 / 115200;
    USART3->CR1 = (USART_CR1_MME | USART_CR1_RE | USART_CR1_TE | USART_CR1_UE);
}

void debug_write(char* msg, size_t len) {
    while (len-- > 0) {
        USART3->TDR = *(uint8_t *) msg++;
        while (!(USART3->ISR & USART_ISR_TXE));
    }
}

int _write(int fd, char *ptr, int len) {
    if (fd == 1) {
        debug_write(ptr, (size_t) len);
    }
    return -1;
}

int main (void) {

    // Config timer
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
    TIM2->PSC = 15999;
    TIM2->ARR = 999;
    TIM2->DIER |= TIM_DIER_UIE;
    NVIC_EnableIRQ(TIM2_IRQn);
    TIM2->CR1 |= TIM_CR1_CEN;

    // Confing user LEDS
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
    GPIOB->MODER |= (GPIO_MODER_MODER0_0 | GPIO_MODER_MODER7_0 | GPIO_MODER_MODER14_0);

    debug_init();

    while (1) {

    }

    return 0;
}

uint16_t seconds = 0;

void TIM2_IRQHandler(void) {
    GPIOB->ODR ^= GPIO_ODR_ODR_7;
    printf("Time elapsed: %d minutes, %d seconds\r\n", seconds / 60, seconds % 60);
    printf("Date: %d\r\n", (int) RTC->DR);
    printf("Time: %d\r\n", (int) RTC->TR);
    TIM2->SR &= ~TIM_SR_UIF;
    seconds++;
}